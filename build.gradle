plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.6.20"
    id 'java'
}

group = 'net.lifecity.mc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "enginehub-maven"
        url = "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-wasm:1.6.20"
    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'

    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly "dev.jorel:commandapi-annotations:8.4.1"
    annotationProcessor "dev.jorel:commandapi-annotations:8.4.1"

    implementation 'commons-io:commons-io:2.11.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
